<?php

namespace App\Http\Controllers;

use App\Http\Resources\ReportResource;
use App\Http\Resources\ResponseHelper;
use App\Models\Registration;
use App\Models\Doctor;
use App\Models\Report;
use Carbon\Carbon;
use Exception;
use Illuminate\Support\Facades\Log;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use OpenApi\Annotations as OA;

/**
 * @OA\Tag(
 *     name="👩‍⚕️ Doctor Services",
 *     description="Report generation and management for doctors"
 * )
 */
class ReportController extends Controller
{
    /**
     * @OA\Get(
     *     path="/doctor/report",
     *     operationId="createDoctorReport",
     *     tags={"👩‍⚕️ Doctor Services"},
     *     summary="Create a new report for today",
     *     description="Creates a new daily report for the authenticated doctor",
     *     security={{"bearerAuth":{}}},
     *     @OA\Response(
     *         response=201,
     *         description="Report created successfully",
     *         @OA\JsonContent(
     *             @OA\Property(property="success", type="boolean", example=true),
     *             @OA\Property(property="message", type="string", example="success make report"),
     *             @OA\Property(property="data", type="object",
     *                 @OA\Property(property="report", type="object",
     *                     @OA\Property(property="id", type="integer", example=1),
     *                     @OA\Property(property="doctor_id", type="integer", example=1),
     *                     @OA\Property(property="patient_count", type="integer", example=5),
     *                     @OA\Property(property="income", type="number", example=250),
     *                     @OA\Property(property="report_date", type="string", format="date", example="2025-04-30")
     *                 )
     *             )
     *         )
     *     ),
     *     @OA\Response(
     *         response=401,
     *         description="Unauthorized",
     *         @OA\JsonContent(
     *             @OA\Property(property="message", type="string", example="Unauthenticated")
     *         )
     *     ),
     *     @OA\Response(
     *         response=404,
     *         description="Doctor profile not found",
     *         @OA\JsonContent(
     *             @OA\Property(property="success", type="boolean", example=false),
     *             @OA\Property(property="message", type="string", example="Doctor profile not found")
     *         )
     *     ),
     *     @OA\Response(
     *         response=500,
     *         description="Report generation failed",
     *         @OA\JsonContent(
     *             @OA\Property(property="success", type="boolean", example=false),
     *             @OA\Property(property="message", type="string", example="failed to make report"),
     *             @OA\Property(property="error", type="string", example="Report for today already exists")
     *         )
     *     )
     * )
     */
    public function makeReport()
    {
        try {
            $user = Auth::user();
            $doctor = $user->doctor;

            if (!$doctor) {
                return ResponseHelper::error('Doctor profile not found', 404);
            }

            $existingReport = Report::where('doctor_id', $doctor->id)
                ->whereDate('report_date', Carbon::today())
                ->first();

            if ($existingReport) {
                throw new Exception("Report for today already exists");
            }

            $patientCount = Registration::where('doctor_id', $doctor->id)
                ->whereDate('visit_date', Carbon::today())
                ->where('status', 'completed')
                ->count();

            $income = $patientCount * $doctor->consultation_fee;

            $report = Report::create([
                'doctor_id'    => $doctor->id,
                'patient_count' => $patientCount,
                'income'       => $income,
                'report_date'  => Carbon::today(),
            ]);

            return ResponseHelper::success(["report" => $report], "success make report", 201);
        } catch (Exception $e) {
            return ResponseHelper::error("failed to make report", 500, $e->getMessage());
        }
    }

    /**
     * @OA\Get(
     *     path="/doctor/reports",
     *     operationId="getAllDoctorReports",
     *     tags={"👩‍⚕️ Doctor Services"},
     *     summary="Get all doctor reports",
     *     description="Retrieves all reports generated by the authenticated doctor",
     *     security={{"bearerAuth":{}}},
     *     @OA\Response(
     *         response=200,
     *         description="Reports retrieved successfully",
     *         @OA\JsonContent(
     *             @OA\Property(property="success", type="boolean", example=true),
     *             @OA\Property(property="message", type="string", example="success retrieve the report"),
     *             @OA\Property(property="data", type="object",
     *                 @OA\Property(
     *                     property="reports",
     *                     type="array",
     *                     @OA\Items(
     *                         @OA\Property(property="id", type="integer", example=1),
     *                         @OA\Property(property="doctor_id", type="integer", example=1),
     *                         @OA\Property(property="patient_count", type="integer", example=5),
     *                         @OA\Property(property="income", type="number", example=250),
     *                         @OA\Property(property="report_date", type="string", format="date", example="2025-04-30")
     *                     )
     *                 )
     *             )
     *         )
     *     ),
     *     @OA\Response(
     *         response=401,
     *         description="Unauthorized",
     *         @OA\JsonContent(
     *             @OA\Property(property="message", type="string", example="Unauthenticated")
     *         )
     *     ),
     *     @OA\Response(
     *         response=404,
     *         description="Doctor profile not found",
     *         @OA\JsonContent(
     *             @OA\Property(property="success", type="boolean", example=false),
     *             @OA\Property(property="message", type="string", example="Doctor profile not found")
     *         )
     *     ),
     *     @OA\Response(
     *         response=500,
     *         description="Failed to retrieve reports",
     *         @OA\JsonContent(
     *             @OA\Property(property="success", type="boolean", example=false),
     *             @OA\Property(property="message", type="string", example="failed to retrieve reports"),
     *             @OA\Property(property="error", type="string", example="Internal Server Error")
     *         )
     *     )
     * )
     */
    public function index()
    {
        try {
            $user = Auth::user();
            $doctor = $user->doctor;

            if (!$doctor) {
                return ResponseHelper::error('Doctor profile not found', 404);
            }

            $reports = Report::where('doctor_id', $doctor->id)
                ->orderBy('report_date', 'desc')
                ->get();

            return ResponseHelper::success(['reports' => $reports], "success retrieve the report", 200);
        } catch (Exception $e) {
            return ResponseHelper::error("failed to retrieve reports", 500, $e->getMessage());
        }
    }
}
