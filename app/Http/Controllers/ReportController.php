<?php

namespace App\Http\Controllers;

use App\Http\Resources\ReportResource;
use App\Http\Resources\ResponseHelper;
use App\Models\Consultation;
use App\Models\Doctor;
use App\Models\Report;
use Carbon\Carbon;
use Exception;
use Illuminate\Support\Facades\Log;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

/**
 * @group Reports
 *
 * APIs for managing reports generated by doctors.
 */
class ReportController extends Controller
{
    /**
     * Create a new report for today.
     *
     * @authenticated
     * 
     * @response 201 {
     *     "message": "success make report",
     *     "data": {
     *         "report": {
     *             "id": 1,
     *             "id_doctor": 1,
     *             "patient_count": 5,
     *             "income": 250,
     *             "report_date": "2025-04-30"
     *         }
     *     }
     * }
     * @response 500 {
     *     "message": "failed to make consultation",
     *     "error": "Report for today already exists"
     * }
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function makeReport()
    {
        try {
            $doctorId = Auth::user()->id;

            $existingReport = Report::where('id_doctor', $doctorId)
                ->whereDate('report_date', Carbon::today())
                ->first();

            if ($existingReport) {
                throw new Exception("Report for today already exists");
            }

            $patientCount = Consultation::where('id_doctor', $doctorId)
                ->whereDate('consultation_date', Carbon::today())->count();
            $doctor = Doctor::findOrFail($doctorId);
            Log::info($doctor);
            $income = $patientCount * $doctor->consultation_fee;

            $report = Report::create([
                'id_doctor'    => $doctorId,
                'patient_count' => $patientCount,
                'income'       => $income,
                'report_date'  => Carbon::today(),
            ]);
            return ResponseHelper::success(["report" => new ReportResource($report)], "success make report", 201);
        } catch (Exception $e) {
            return ResponseHelper::error("failed to make consultation", 500, $e->getMessage());
        }
    }

    /**
     * Get all reports generated by the authenticated doctor.
     *
     * @authenticated
     * 
     * @response 200 {
     *     "message": "success retreive the report",
     *     "data": {
     *         "reports": [
     *             {
     *                 "id": 1,
     *                 "id_doctor": 1,
     *                 "patient_count": 5,
     *                 "income": 250,
     *                 "report_date": "2025-04-30"
     *             },
     *             {
     *                 "id": 2,
     *                 "id_doctor": 1,
     *                 "patient_count": 3,
     *                 "income": 150,
     *                 "report_date": "2025-04-29"
     *             }
     *         ]
     *     }
     * }
     * @response 500 {
     *     "message": "failed to make consultation",
     *     "error": "Internal Server Error"
     * }
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function index()
    {
        try {
            $reports = Report::where('id_doctor', Auth::user()->id)->get();
            return ResponseHelper::success(['reports' => ReportResource::collection($reports)], "success retreive the report", 200);
        } catch (Exception $e) {
            return ResponseHelper::error("failed to make consultation", 500, $e->getMessage());
        }
    }
}